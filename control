#!/bin/bash

WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE

mkdir -p var

module=agent
app=falcon-$module
conf=cfg.json
logfile=var/app.log

check_pid() {
    running=`pgrep -x $app | wc -l`
    return $running
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid=`pgrep -x $app`"
        return 1
    fi

    if ! [ -f $conf ];then
        echo "Config file $conf doesn't exist, creating one."
        cp cfg.example.json $conf
    fi
    nohup `pwd`/$app -c `pwd`/$conf &> `pwd`/$logfile &
    sleep 1
    running=`ps -p $! | grep -v "PID TTY" | wc -l`
    if [ $running -gt 0 ];then
        echo "$app started..., pid=$!"
    else
        echo "$app failed to start."
        return 1
    fi
}

function stop() {
    pkill -x $app
    echo "$app stoped..."
}

function restart() {
    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

function tailf() {
    tail -f $logfile
}

function build() {
    GOOS=linux GOARCH=amd64 go build
    if [ $? -ne 0 ]; then
        exit $?
    fi
}

function pack() {
    build
    git log -1 --pretty=%h > gitversion
    file_list="control cfg.json $app"
    echo "...tar $app.tar.gz <= $file_list"
    tar zcf $app.tar.gz $file_list
}

function packbin() {
    build
    git log -1 --pretty=%h > gitversion
    tar zcvf $app-bin.tar.gz $app
}

function help() {
    echo "$0 build|pack|start|stop|restart|status|tail"
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "tail" ];then
    tailf
elif [ "$1" == "build" ];then
    build
elif [ "$1" == "pack" ];then
    pack
elif [ "$1" == "packbin" ];then
    packbin
else
    help
fi
